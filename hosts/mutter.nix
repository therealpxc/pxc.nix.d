# Edit this configuration file to define what should be installed on
# your system.  Help is available in the configuration.nix(5) man page
# and in the NixOS manual (accessible by running ‘nixos-help’).

{ config, pkgs, ... }:

{
  imports =
    [ # Include the results of the hardware scan.
      ./profiles/player.nix
      ./profiles/elements/seedbox.nix
      ./modules/xcompose
    ];
  
  # hardware-y stuff
  nixpkgs.config.allowUnfree = true;
  # Use the GRUB 2 boot loader.
  boot.loader.grub = {
    enable = true;
    version = 2;
    device = "/dev/sda";
  };

  fileSystems = {
    "/" = { device = "/dev/disk/by-uuid/8faec437-ff47-4c9e-ac38-6d46d19bc274"; fsType = "ext4"; };
    "/mnt/Zeus" = { device = "/dev/disk/by-uuid/59a11ea6-fc2b-4c37-8b9b-0fc8de4df0dd"; fsType = "btrfs"; };
    "/mnt/Constantine" = { device = "/dev/disk/by-uuid/22228e88-1c5e-4eb3-889a-454d348a2edf"; fsType = "btrfs"; };
    "/home/pxc/.local/mnt/Constantine" = { device = "/dev/disk/by-uuid/22228e88-1c5e-4eb3-889a-454d348a2edf"; fsType = "btrfs"; };
#    "/home/pxc/.local/mnt/Constantine" = { device = "/mnt/Constantine"; fsType = "bind"; };
  };
 
  systemd.automounts = [
    { before = [ "deluged.service" "transmission.service" ]; wantedBy = [ "deluged.service" "transmission.service" ]; where = "/mnt/Constantine"; }
    { before = [ "deluged.service" "transmission.service" ]; wantedBy = [ "deluged.service" "transmission.service" ]; where = "/mnt/Zeus"; }
  ];


  swapDevices = [ { device = "/dev/disk/by-uuid/df0845be-fa9f-4fd0-b053-fefeb7eec0a2"; } ];

  networking.hostName = "mutter"; # Define your hostname.

  environment.systemPackages = with pkgs; [
    bluez-tools
    bluez
  ];

    services.udev.extraRules = ''
      # Steam controller — basic functionality
      # This rule is needed for basic functionality of the controller in Steam and keyboard/mouse emulation
      SUBSYSTEM=="usb", ATTRS{idVendor}=="28de", MODE="0666"
      
      # This rule is necessary for gamepad emulation; make sure you replace 'pgriffais' with a group that the user that runs Steam belongs to
      #KERNEL=="uinput", MODE="0660", GROUP="pgriffais", OPTIONS+="static_node=uinput"
      KERNEL=="uinput", MODE="0660", GROUP="users", OPTIONS+="static_node=uinput"
      
      
      # Valve HID devices over USB hidraw
      KERNEL=="hidraw*", ATTRS{idVendor}=="28de", MODE="0666"
      
      # Valve HID devices over bluetooth hidraw 
      KERNEL=="hidraw*", KERNELS=="*28DE:*", MODE="0666"
      
      # DualShock 4 over USB hidraw
      KERNEL=="hidraw*", ATTRS{idVendor}=="054c", ATTRS{idProduct}=="05c4", MODE="0666"
      
      # DualShock 4 wireless adapter over USB hidraw
      KERNEL=="hidraw*", ATTRS{idVendor}=="054c", ATTRS{idProduct}=="0ba0", MODE="0666"
      
      # DualShock 4 Slim over USB hidraw
      KERNEL=="hidraw*", ATTRS{idVendor}=="054c", ATTRS{idProduct}=="09cc", MODE="0666"
      
      # DualShock 4 over bluetooth hidraw
      KERNEL=="hidraw*", KERNELS=="*054C:05C4*", MODE="0666"
      
      # DualShock 4 Slim over bluetooth hidraw KERNEL=="hidraw*", KERNELS=="*054C:09CC*", MODE="0666"
      
      # USB GameCube controller adapter
      SUBSYSTEM=="usb", ENV{DEVTYPE}=="usb_device", ATTRS{idVendor}=="057e", ATTRS{idProduct}=="0337", MODE="0666", GROUP="users"
    '';
    boot.kernelModules = [ "uinput" ];
    boot.blacklistedKernelModules = [ "joydev" "xpad" ];

  # The NixOS release to be compatible with for stateful data such as databases.
  system.stateVersion = "16.03";

  nix.buildCores = 8;
  nix.maxJobs = 4;

  services.xserver.videoDrivers = [ "nvidia" ];
  hardware.opengl.driSupport32Bit = true;
  
  services.xserver.libinput.enable = true;
  services.xserver.libinput.clickMethod = "buttonareas";

  #services.xserver.synaptics.enable = true;
  # for my tiny wireless keyboard, whose touchpad has no real buttons
  #services.xserver.synaptics.additionalOptions = ''
  #  Option "LBCornerButton" "1"   # left-click
  #  Option "RBCornerButton" "3"   # right-click
  #'';

  services.xserver.deviceSection = ''
    Driver         "nvidia"
    VendorName     "NVIDIA Corporation"
    BoardName      "GeForce GTX 750 Ti"
  '';

  # based on configuration generated by nvidia-config
  # this is for the smaller of the two TVs, the Seiki; disabling for now
  #services.xserver.monitorSection = ''
    # HorizSync source: edid, VertRefresh source: edid
    #VendorName     "Seiki"
    #ModelName      "SEK SE42UMS"
    #HorizSync       30.0 - 80.0
    #VertRefresh     50.0 - 75.0
    #Option         "DPMS" "False" # this TV sucks; can't do DPMS
    #DisplaySize    894 563
    #Option         "DPI" "208 x 210" # 2x native
    #Option         "DPI" "156 x 158" # 1.5x native
  #'';

  services.transmission.settings = {
    # transmission needs ownership of these directories, as in NixOS,
    # the systemd service chmods key directories.
    download-dir = "/mnt/Constantine/Docks/_Lost+Found";
    incomplete-dir = "/mnt/Constantine/Docks/_Incomplete";
    incomplete-dir-enabled = true;
  };

  hardware.bluetooth.enable = true;
  hardware.pulseaudio.package = pkgs.pulseaudioFull;
  networking.networkmanager.enable = true;
  networking.firewall.enable = false;

  services.xserver.displayManager.sddm.autoLogin = {
    enable = true;
    user = "pxc";
    #relogin = true;
  };

  #nixup.enable = true;
  nix.useSandbox = true;
  users.users.pxc.extraGroups = [ "mediakeepers" ];

  services.subsonic.enable = true;
  services.subsonic.maxMemory = 256; # in MB
  services.subsonic.httpsPort = 4343;

  services.samba.shares = {
    Constantine = {
      browseable = "yes";
      comment = "Constantine on Mutter";
      "guest ok" = "yes";
      path = "/mnt/Constantine";
      "read only" = true;
      "guest account" = "pxc";
    };

    Zeus = {
      browseable = "yes";
      comment = "Constantine on Mutter";
      "guest ok" = "yes";
      path = "/mnt/Zeus";
      "read only" = true;
      "guest account" = "pxc";
    };
  };

  services.samba.extraConfig = ''
    map to guest = bad user
  '';
}
