### ↓ invisible.xcompose ↓ ###

# Spaces
# ======

# Used like the regular space, except it tells layout softwre not to
# break lines at its position.  Also the prefereed character to
# display combining marks in isolation (example:  ̧́)
## <Multi_key> <space> <space>: " "   nobreakspace # NO-BREAK SPACE
# common abbreviation
<Multi_key> <n> <b> <s> <p>: " "   nobreakspace # NO-BREAK SPACE

# The following are used for manual spacing, for example in math.

# Nut; the width of capital N (half an em‐space)
<Multi_key> <space> <n>: " " U2002   # EN SPACE
<Multi_key> <space> <N>: " " U2002   # EN SPACE
# Mutton; the width of capital M ≅ type width
<Multi_key> <space> <m>: " " U2003   # EM SPACE
<Multi_key> <space> <M>: " " U2003   # EM SPACE
# aka thick space
<Multi_key> <space> <3>: " " U2004 # THREE-PER-EM SPACE
# aka mid space
<Multi_key> <space> <4>: " " U2005 # FOUR-PER-EM SPACE
<Multi_key> <space> <6>: " " U2006 # SIX-PER-EM SPACE

# 4/18 of an em
# <Multi_key> <space> <>: " " U205F # MEDIUM MATHEMATICAL SPACE

# tabular space = the width of a digit if font is fixed‐digit 
<Multi_key> <space> <numbersign>: " " U2007 # FIGURE SPACE
# punctuation space = the width of a period.
## <Multi_key> <space> <period>: " "   U2008 # PUNCTUATION SPACE

<Multi_key> <space> <t>: " " U2009 # THIN SPACE
<Multi_key> <space> <h>: " " U200A # HAIR SPACE
# bar = a strand of hair?
<Multi_key> <space> <bar>: " " U200A # HAIR SPACE


# Control
# =======

# A space so thin, it’s invisible.  Used to separate words in scripts
# that don’t separate words such as Thai, Kmer, and Japanese.  Since
# it’s invisible, ZWSP is actually not a space at all; but it might
# get expanded in automatic paragraph justification.
<Multi_key> <space> <0>: "​" U200B # ZERO WIDTH SPACE
# common abbreviation
<Multi_key> <z> <w> <s> <p>: "​" U200B # ZERO WIDTH SPACE

# Frequently called “shy” (from _s_oft _hy_phen); marks places in
# words were hyphenation is preferred (for automatic line‐breaking).
#
# Shy is an invisible control character in Unicode, but was visible in
# ISO‐8859‐1.  See http://www.cs.tut.fi/~jkorpela/shy.html .
<Multi_key> <minus> <space>             : "­" U00AD # SOFT HYPHEN
<Multi_key> <s> <h> <y>                 : "­" U00AD # SOFT HYPHEN

# Byte‐order mark.  Inserted at the start of UTF16 and UTF32 texts to
# sign byte direction (since U+FFEF is a non‐character), and also in
# UTF8 just to help encoding detectors.  It used to double as a
# zero‐width non‐breaking space, but that caused problems so it’s
# deprecated; use word joiner (below) instead.
<Multi_key> <b> <o> <m>: "﻿" UFEFF

# The proper zero‐width no‐break space.
<Multi_key> <w> <j>: "⁠" U2060 # WORD JOINER
<Multi_key> <z> <w> <n> <b> <s> <p>: "⁠" U2060 # WORD JOINER

# The following fine‐tune the bidirectional algorithm.  In fact they
# might mess up the display of this file =) The sequences are the
# official abbreviations and widely used.
#
# The “marks” are useful for overriding the default behavior of the
# bidi algorithm, that considers a paragraph to be in the direction of
# the first strongly‐directed letter.
<Multi_key> <l> <r> <m>: "‎" U200E # LEFT TO RIGHT MARK
<Multi_key> <r> <l> <m>: "‏" U200F # RIGHT TO LEFT MARK
<Multi_key> <l> <r> <e>: "‪" U202A # LEFT TO RIGHT EMBEDDING
<Multi_key> <r> <l> <e>: "‫" U202B # RIGHT TO LEFT EMBEDDING
<Multi_key> <p> <d> <f>: "‬" U202C # POP DIRECTIONAL FORMATTING
# The overrides will force bidi to treat _any_ character as one of
# that directionality.
<Multi_key> <l> <r> <o>: "‭" U202D # LEFT TO RIGHT OVERRIDE
<Multi_key> <r> <l> <o>: "‮" U202E # RIGHT TO LEFT OVERRIDE

# a free pop just to be sure: ‬
